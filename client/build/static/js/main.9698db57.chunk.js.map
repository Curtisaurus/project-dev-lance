{"version":3,"sources":["components/Sidebar/SidebarElements.js","components/Sidebar/index.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarContainer","styled","aside","isOpen","CloseIcon","FaTimes","Icon","div","SidebarWrapper","SidebarMenu","ul","SidebarLink","LinkScroll","SideBtnWrap","SidebarRoute","LinkRoute","Sidebar","toggle","onClick","to","Nav","nav","NavbarContainer","NavLogo","LinkRouter","MobileIcon","NavMenu","NavItem","li","NavLinks","NavBtn","NavBtnLink","Navbar","Fragment","Home","useState","setIsOpen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAKaA,EAAmBC,IAAOC,MAAV,0PAWhB,qBAAGC,OAAuB,OAAS,OACvC,qBAAGA,OAAuB,IAAM,WAG5BC,EAAYH,YAAOI,IAAPJ,CAAH,4CAITK,EAAOL,IAAOM,IAAV,2KAUJC,EAAiBP,IAAOM,IAAV,4CAIdE,EAAcR,IAAOS,GAAV,uOAWXC,EAAcV,YAAOW,OAAPX,CAAH,kVAkBXY,EAAcZ,IAAOM,IAAV,0EAKXO,EAAeb,YAAOc,IAAPd,CAAH,+X,OClCVe,EA1BC,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,OAAQc,EAAa,EAAbA,OACzB,OACE,eAACjB,EAAD,CAAkBG,OAAQA,EAAQe,QAASD,EAA3C,UACE,cAACX,EAAD,CAAMY,QAASD,EAAf,SACE,cAACb,EAAD,MAEF,eAACI,EAAD,WACE,eAACC,EAAD,WACE,cAACE,EAAD,CAAaQ,GAAG,OAAOD,QAASD,EAAhC,mBAGA,cAACN,EAAD,CAAaQ,GAAG,SAASD,QAASD,EAAlC,oBAGA,cAACN,EAAD,CAAaQ,GAAG,IAAID,QAASD,EAA7B,0BAIF,cAACJ,EAAD,UACE,cAACC,EAAD,CAAcK,GAAG,gBAAjB,sCC1BGC,EAAMnB,IAAOoB,IAAV,yTAkBHC,EAAkBrB,IAAOM,IAAV,2KAWfgB,EAAUtB,YAAOuB,IAAPvB,CAAH,6MAYPwB,EAAaxB,IAAOM,IAAV,uSAgBVmB,EAAUzB,IAAOS,GAAV,uLAYPiB,EAAU1B,IAAO2B,GAAV,6CAKPC,EAAW5B,YAAOW,OAAPX,CAAH,qOAcR6B,EAAS7B,IAAOoB,IAAV,2IAUNU,EAAa9B,YAAOuB,IAAPvB,CAAH,8XC5DR+B,EA7BA,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAChB,OACE,cAAC,IAAMgB,SAAP,UACE,cAACb,EAAD,UACE,eAACE,EAAD,WACE,cAACC,EAAD,CAASJ,GAAG,IAAZ,uBACA,cAACM,EAAD,CAAYP,QAASD,EAArB,SACE,cAAC,IAAD,MAEF,eAACS,EAAD,WACE,cAACC,EAAD,UACE,cAACE,EAAD,CAAUV,GAAG,QAAb,qBAEF,cAACQ,EAAD,UACE,cAACE,EAAD,CAAUV,GAAG,SAAb,qBAEF,cAACQ,EAAD,UACE,cAACE,EAAD,CAAUV,GAAG,IAAb,4BAGJ,cAACW,EAAD,UACE,cAACC,EAAD,CAAYZ,GAAG,gBAAf,uCChBGe,EAfF,WACX,MAA4BC,oBAAS,GAArC,mBAAOhC,EAAP,KAAeiC,EAAf,KAEMnB,EAAS,WACbmB,GAAWjC,IAGb,OACE,eAAC,IAAM8B,SAAP,WACE,cAAC,EAAD,CAAS9B,OAAQA,EAAQc,OAAQA,IACjC,cAAC,EAAD,CAAQA,OAAQA,QCAPoB,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9698db57.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link as LinkScroll } from \"react-scroll\";\nimport { Link as LinkRoute } from \"react-router-dom\";\nimport { FaTimes } from \"react-icons/fa\";\n\nexport const SidebarContainer = styled.aside`\n  position: fixed;\n  z-index: 999;\n  width: 100%;\n  height: 100%;\n  background: #0d0d0d;\n  display: grid;\n  align-items: center;\n  top: 0;\n  left: 0;\n  transition: 0.3s ease-in-out;\n  opacity: ${({ isOpen }) => (isOpen ? \"100%\" : \"0\")};\n  top: ${({ isOpen }) => (isOpen ? \"0\" : \"-100%\")};\n`;\n\nexport const CloseIcon = styled(FaTimes)`\n  color: #fff;\n`;\n\nexport const Icon = styled.div`\n  position: absolute;\n  top: 1.2rem;\n  right: 1.5rem;\n  background: transparent;\n  font-size: 2rem;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SidebarWrapper = styled.div`\n  color: #fff;\n`;\n\nexport const SidebarMenu = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(6, 80px);\n  text-align: center;\n\n  @media screen and (max-width: 480px) {\n    grid-template-rows: repeat(6, 60px);\n  }\n`;\n\nexport const SidebarLink = styled(LinkScroll)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  text-decoration: none;\n  list-style: none;\n  transition: 0.2s ease-in-out;\n  text-decoration: none;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    color: #01bf71;\n    transition: 0.2s ease-in-out;\n  }\n`;\n\nexport const SideBtnWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SidebarRoute = styled(LinkRoute)`\n  border-radius: 50px;\n  background: #01bf71;\n  white-space: nowrap;\n  padding: 16px 64px;\n  color: #010606;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;\n","import React from \"react\";\nimport {\n  SidebarContainer,\n  Icon,\n  CloseIcon,\n  SidebarWrapper,\n  SidebarMenu,\n  SidebarLink,\n  SideBtnWrap,\n  SidebarRoute,\n} from \"./SidebarElements\";\n\nconst Sidebar = ({ isOpen, toggle }) => {\n  return (\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n      <Icon onClick={toggle}>\n        <CloseIcon />\n      </Icon>\n      <SidebarWrapper>\n        <SidebarMenu>\n          <SidebarLink to=\"loin\" onClick={toggle}>\n            Login\n          </SidebarLink>\n          <SidebarLink to=\"logout\" onClick={toggle}>\n            Logout\n          </SidebarLink>\n          <SidebarLink to=\"/\" onClick={toggle}>\n            Dashboard\n          </SidebarLink>\n        </SidebarMenu>\n        <SideBtnWrap>\n          <SidebarRoute to=\"/project-form\">Start a Project</SidebarRoute>\n        </SideBtnWrap>\n      </SidebarWrapper>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from \"styled-components\";\nimport { Link as LinkRouter } from \"react-router-dom\";\nimport { Link as LinkScroll } from \"react-scroll\";\n\n// Navigation Styling\nexport const Nav = styled.nav`\n  background: #000;\n  height: 80px;\n  /* margin-top: -80px; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n\n  @media screen and (max-width: 960px) {\n    transition: 0.8s all ease;\n  }\n`;\n\n// Navbar Container Styling\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\n\n// NavLogo Styling\nexport const NavLogo = styled(LinkRouter)`\n  color: #fff;\n  display: flex;\n  justify-self: flex-start;\n  cursor: pointer;\n  font-size: 1.5rem;\n  align-items: center;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\n// Mobile Icon Styling\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    color: #fff;\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem; /* defaults to 16px */\n    cursor: pointer;\n  }\n`;\n\n// Mobile Navigation Menu Styling\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\n// Nav Item Styling\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\n// NavLinks Styling\nexport const NavLinks = styled(LinkScroll)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n  &.active {\n    border-bottom: 3px solid #01bf71;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\n// Nav Button Link Styling\nexport const NavBtnLink = styled(LinkRouter)`\n  border-radius: 50px;\n  background: #01bf71;\n  white-space: nowrap;\n  padding: 8px 20px;\n  color: #010606;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;\n","import React from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  MobileIcon,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\nconst Navbar = ({ toggle }) => {\n  return (\n    <React.Fragment>\n      <Nav>\n        <NavbarContainer>\n          <NavLogo to=\"/\">devLancer</NavLogo>\n          <MobileIcon onClick={toggle}>\n            <FaBars />\n          </MobileIcon>\n          <NavMenu>\n            <NavItem>\n              <NavLinks to=\"login\">Login</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks to=\"logout\">Login</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks to=\"/\">Dashboard</NavLinks>\n            </NavItem>\n          </NavMenu>\n          <NavBtn>\n            <NavBtnLink to=\"/project-form\">Start a Project</NavBtnLink>\n          </NavBtn>\n        </NavbarContainer>\n      </Nav>\n    </React.Fragment>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport Navbar from \"../components/Navbar\";\n\nconst Home = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Home from \"./pages\";\n\nfunction App() {\n  return (\n    <Router>\n      <Home />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}